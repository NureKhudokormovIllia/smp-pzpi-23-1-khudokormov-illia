 
 
Міністерство освіти і науки України 
 
 
 
Харківський національний університет радіоелектроніки 
 
 
 
 
 
 
 
Кафедра програмної інженерії 
 
 
 



 
Звіт з лабораторної роботи №3
з дисципліни «Скриптові мови програмування» 
 
 
 
 
 






 
Виконав:                                                                              Перевірили: 
гр.ПЗПІ-23-1                                                                       Сокорчук Ігор 
Худокормов Ілля Владиславович                                     Петрович 
 
 
 


Харків 2025 
ЗАВДАННЯ 

Розробити вебзастосунок — інтернет-магазин із використанням PHP та HTML. Структура сторінки повинна складатися з трьох основних блоків: header (шапка), main (основний вміст), footer (підвал). Необхідно реалізувати такі функції:
1.	Додавання товарів до кошика — можливість обирати товари і додавати їх до кошика покупця.
2.	Зміна кількості товарів у кошику — забезпечити можливість збільшення або зменшення кількості кожного товару без повного видалення.
3.	Видалення товарів із кошика — функціонал для повного видалення вибраного товару.
Для зберігання інформації про кошик використовувати механізм сесій PHP. Передача параметрів (наприклад, ідентифікатори товарів, кількість) має здійснюватися через HTTP-методи GET і POST відповідно до логіки застосунку.
Забезпечити обов’язкову перевірку правильності введених даних (валідація), включаючи перевірку числових значень кількості та коректності ідентифікаторів товарів.
Реалізувати відображення даних: через форми для введення/зміни інформації, через таблиці для перегляду списку товарів у кошику з зазначенням їхніх характеристик (наприклад, назва, кількість, ціна).
Дані про товари (наприклад, асортимент, ціни, описи) повинні зберігатися у базі даних SQLite. Реалізувати підключення до SQLite, створення необхідних таблиць і запити для отримання інформації про товари.

ХІД РОБОТИ
 
1. Структура проекту
•	index.php — головна сторінка зі списком товарів;
•	cart.php — сторінка кошика з можливістю видалення товарів;
•	about.php — інформаційна сторінка про магазин;
•	functions.php — функції для роботи з кошиком;
•	config.php – файл конфігурування sqlite;
•	data/products.php — масив товарів;
•	tpl/header.phtml, tpl/footer.phtml — шаблони для HTML.
2. Основні етапи роботи
2.1 Ініціалізація сесії та підключення файлів
Кожен PHP-файл починається з ініціалізації сесії та підключення функцій:
<?php
session_start();
require_once 'functions.php';
Пояснення:
•	session_start() — дозволяє зберігати дані кошика між сторінками.
•	functions.php — містить функції для роботи з кошиком (наприклад, getCartItems()).
2.2 Головна сторінка (index.php)
Функціонал:
•	Відображення списку товарів з можливістю додавання до кошика.
•	Обробка форми для додавання товарів.
Код форми:
<form method="POST" action="index.php">
    <input type="number" name="product_<?= $id ?>" min="0" value="0" class="count-input">
    <input type="submit" name="submit" value="Add to cart">
</form>
Приклад товару:
 
Рисунок 2.1 – Сторінка товарів
Обробка даних:
if (isset($_POST['submit'])) {
    // Перевірка кількості товарів
    if (isset($_POST['product_1']) && $_POST['product_1'] > 0) {
        addCartItem([...]);
    }
}


2.3 Робота з кошиком (cart.php)
Функціонал:
•	Перегляд товарів у кошику.
•	Видалення товарів або очищення кошика.
Приклад кошика:
 
Рисунок 2.2 – Сторінка кошику
Код для видалення товару:
if ($_GET['action'] === 'remove' && isset($_GET['id'])) {
    removeCartItem((int)$_GET['id']);
}
Виведення загальної суми:
<td colspan="3"><strong>$<?= number_format($totalSum, 2) ?></strong></td>
2.4 Інформаційна сторінка (about.php)
Функціонал:
•	Відображення інформації про магазин (контакти, години роботи тощо).
Приклад вмісту:
<h4>Як з нами зв'язатися:</h4>
<p>Телефон: +38 (050) 123-45-67</p>
<p>Email: illia.khudokormov@nure.ua</p>
 
Рисунок 2.3 – Сторінка “Про нас”


2.5 Функції для роботи з кошиком (functions.php)
Основні функції:
1.	getCartItems() — отримує товари з сесії.
2.	addCartItem() — додає товар до кошика.
3.	removeCartItem() — видаляє товар за ID.
Приклад функції:
function removeCartItem($productId) {
    $db = getDbConnection();
    $sessionId = session_id();
    
    $stmt = $db->prepare('DELETE FROM cart_items WHERE session_id = :session_id AND product_id = :product_id');
    $stmt->bindValue(':session_id', $sessionId, SQLITE3_TEXT);
    $stmt->bindValue(':product_id', $productId, SQLITE3_INTEGER);
    $result = $stmt->execute();
    
    $db->close();
    return ($result !== false);
} 
2.6 Шаблони (header.phtml, footer.phtml)
Header:
•	Містить навігаційне меню та CSS-стилі.
Footer:
•	Містить копірайт та посилання на сторінки.
Приклад навігації:
<div class="navigation">
    <a href="index.php"><i class="fas fa-home"></i> Home</a>
    <span class="separator">|</span>
    <a href="index.php"><i class="fas fa-shopping-bag"></i> Products</a>
    <span class="separator">|</span>
    <a href="cart.php"><i class="fas fa-shopping-cart"></i> Cart</a>
</div>
 
Рисунок 2.4 – Сторінка з футером та хедером 
ВИСНОВОК 
 
У процесі виконання лабораторної роботи №3 було розроблено вебсайт інтернет-магазину з використанням вбудованого сервера PHP. Під час роботи було засвоєно навички обробки HTTP-запитів, підключення зовнішніх файлів за допомогою конструкції include, створення та обробки HTML-форм із передачею даних методом POST. Окрім цього, було реалізовано збереження даних користувача в сесії з використанням суперглобального масиву $_SESSION, що дозволило забезпечити підтримку стану кошика під час роботи користувача з сайтом. Також було реалізовано збереження інформації про товари в базі даних SQLite, що дало можливість організувати зручне отримання даних про асортимент через SQL-запити та забезпечити гнучкість у керуванні товарною базою. 
ВИКОРИСТАНІ ДЖЕРЕЛА 
 
1.	Матеріали про PHP / Матеріали лекцій з дисципліни / Скриптові мови програмування / dl.nure. URL: https://dl.nure.ua/mod/page/view.php?id=669238 (дата звернення: 10.05.2025)
2.	PHP Sessions / php.net. URL: https://www.php.net/manual/en/book.session.php (дата звернення 10.05.2025)
3.	PHP Form Validation / w3schools. URL: https://www.w3schools.com/php/php_form_validation.asp (дата звернення 10.05.2025)
4.	HTML Table Tag / w3schools. URL: https://www.w3schools.com/tags/tag_table.asp (дата звернення 10.05.2025)
5.	Ajax Libs CSS Skeleton / cdnjs. URL: https://cdnjs.com/libraries/skeleton (дата звернення 10.05.2025)
6.	Ajax Libs Font Awesome / cdnjs. URL: https://cdnjs.com/libraries/font-awesome (дата звернення 10.05.25)
7.	Images / istockphoto. URL: https://www.istockphoto.com/ (дата звернення 10.05.25)
 
ДОДАТОК А
Код програми:
index.php:
1	<?php
2	session_start();
3	
4	require_once 'functions.php';
5	
6	$products = getAllProducts();
7	
8	$errorMessage = '';
9	
10	if (isset($_POST['submit'])) {
11	    $hasErrors = false;
12	    $itemsAdded = false;
13	    
14	    foreach ($products as $id => $product) {
15	        $productKey = 'product_' . $id;
16	        if (isset($_POST[$productKey]) && is_numeric($_POST[$productKey]) && $_POST[$productKey] > 0) {
17	            $quantity = (int)$_POST[$productKey];
18	            $itemsAdded = true;
19	            addToCart($id, $quantity);
20	        }
21	    }
22	    
23	    if (!$itemsAdded) {
24	        $errorMessage = 'Please, add at least one item to cart.';
25	    } else {
26	        header('Location: cart.php');
27	        exit;
28	    }
29	}
30	
31	include 'tpl/header.phtml';
32	?>
33	<div class="container">
34	    <div class="row">
35	        <div class="column">
36	            <div class="centered-form-container">
37	                <?php if (!empty($errorMessage)): ?>
38	                <div class="error-message">
39	                    <?= $errorMessage ?>
40	                </div>
41	                <?php endif; ?>
42	                <form method="POST" action="index.php">
43	                    <table class="u-full-width">
44	                        <thead>
45	                            <tr>
46	                                <th style="text-align: center;">Image</th>
47	                                <th>Name</th>
48	                                <th>Description</th>
49	                                <th>Price</th>
50	                                <th>Amount</th>
51	                            </tr>
52	                        </thead>
53	                        <tbody>
54	                            <?php foreach ($products as $id => $product): ?>
55	                            <tr>
56	                                <td>
57	                                    <div class="container-image">
58	                                        <img class="item-image" src="<?= $product['imageName'] ?>">
59	                                    </div>
60	                                </td>
61	                                <td><strong><?= $product['title'] ?></strong></td>
62	                                <td><?= $product['description'] ?></td>
63	                                <td>$<?= number_format($product['price'], 2) ?></td>
64	                                <td>
65	                                    <input type="number" name="product_<?= $id ?>" min="0" value="0" class="count-input">
66	                                </td>
67	                            </tr>
68	                            <?php endforeach; ?>
69	                        </tbody>
70	                    </table>
71	                    <input type="submit" name="submit" value="Add to cart" class="button-primary">
72	                </form>
73	            </div>
74	        </div>
75	    </div>
76	</div>
77	<?php include 'tpl/footer.phtml'; ?>
functions.php:
1	<?php
2	require_once 'config.php';
3	
4	function getAllProducts() {
5	    $db = getDbConnection();
6	    $products = [];
7	    
8	    $result = $db->query('SELECT * FROM products ORDER BY id');
9	    
10	    while ($row = $result->fetchArray(SQLITE3_ASSOC)) {
11	        $products[$row['id']] = [
12	            'id' => $row['id'],
13	            'title' => $row['title'],
14	            'description' => $row['description'],
15	            'imageName' => $row['image_name'],
16	            'price' => $row['price']
17	        ];
18	    }
19	    
20	    $db->close();
21	    return $products;
22	}
23	
24	function getProductById($id) {
25	    $db = getDbConnection();
26	    
27	    $stmt = $db->prepare('SELECT * FROM products WHERE id = :id');
28	    $stmt->bindValue(':id', $id, SQLITE3_INTEGER);
29	    $result = $stmt->execute();
30	    
31	    $product = $result->fetchArray(SQLITE3_ASSOC);
32	    $db->close();
33	    
34	    if ($product) {
35	        return [
36	            'id' => $product['id'],
37	            'title' => $product['title'],
38	            'description' => $product['description'],
39	            'imageName' => $product['image_name'],
40	            'price' => $product['price']
41	        ];
42	    }
43	    
44	    return null;
45	}
46	
47	function addToCart($productId, $quantity) {
48	    $db = getDbConnection();
49	    $sessionId = session_id();
50	    
51	    $stmt = $db->prepare('SELECT id, quantity FROM cart_items WHERE session_id = :session_id AND product_id = :product_id');
52	    $stmt->bindValue(':session_id', $sessionId, SQLITE3_TEXT);
53	    $stmt->bindValue(':product_id', $productId, SQLITE3_INTEGER);
54	    $result = $stmt->execute();
55	    
56	    $existingItem = $result->fetchArray(SQLITE3_ASSOC);
57	    
58	    if ($existingItem) {
59	        $stmt = $db->prepare('UPDATE cart_items SET quantity = quantity + :quantity WHERE id = :id');
60	        $stmt->bindValue(':quantity', $quantity, SQLITE3_INTEGER);
61	        $stmt->bindValue(':id', $existingItem['id'], SQLITE3_INTEGER);
62	    } else {
63	        $stmt = $db->prepare('INSERT INTO cart_items (session_id, product_id, quantity) VALUES (:session_id, :product_id, :quantity)');
64	        $stmt->bindValue(':session_id', $sessionId, SQLITE3_TEXT);
65	        $stmt->bindValue(':product_id', $productId, SQLITE3_INTEGER);
66	        $stmt->bindValue(':quantity', $quantity, SQLITE3_INTEGER);
67	    }
68	    
69	    $result = $stmt->execute();
70	    $db->close();
71	    
72	    return ($result !== false);
73	}
74	
75	function getCartItems() {
76	    $db = getDbConnection();
77	    $sessionId = session_id();
78	    $cartItems = [];
79	    
80	    $stmt = $db->prepare('
81	        SELECT ci.id as cart_id, p.id, p.title, p.price, p.image_name, ci.quantity AS count
82	        FROM cart_items ci
83	        JOIN products p ON ci.product_id = p.id
84	        WHERE ci.session_id = :session_id
85	    ');
86	    $stmt->bindValue(':session_id', $sessionId, SQLITE3_TEXT);
87	    $result = $stmt->execute();
88	    
89	    while ($row = $result->fetchArray(SQLITE3_ASSOC)) {
90	        $cartItems[] = [
91	            'cart_id' => $row['cart_id'],
92	            'id' => $row['id'],
93	            'name' => $row['title'],
94	            'price' => $row['price'],
95	            'count' => $row['count'],
96	            'imageName' => $row['image_name']
97	        ];
98	    }
99	    
100	    $db->close();
101	    return $cartItems;
102	}
103	
104	function removeCartItem($productId) {
105	    $db = getDbConnection();
106	    $sessionId = session_id();
107	    
108	    $stmt = $db->prepare('DELETE FROM cart_items WHERE session_id = :session_id AND product_id = :product_id');
109	    $stmt->bindValue(':session_id', $sessionId, SQLITE3_TEXT);
110	    $stmt->bindValue(':product_id', $productId, SQLITE3_INTEGER);
111	    $result = $stmt->execute();
112	    
113	    $db->close();
114	    return ($result !== false);
115	}
116	
117	function clearCart() {
118	    $db = getDbConnection();
119	    $sessionId = session_id();
120	    
121	    $stmt = $db->prepare('DELETE FROM cart_items WHERE session_id = :session_id');
122	    $stmt->bindValue(':session_id', $sessionId, SQLITE3_TEXT);
123	    $result = $stmt->execute();
124	    
125	    $db->close();
126	    return ($result !== false);
127	}
128	?> 
config.php
1	<?php
2	define('DB_FILE', __DIR__ . '/data/shop.db');
3	
4	function getDbConnection() {
5	    try {
6	        $db = new SQLite3(DB_FILE);
7	        $db->exec('PRAGMA foreign_keys = ON;');
8	        return $db;
9	    } catch (Exception $e) {
10	        die('Error connecting to database: ' . $e->getMessage());
11	    }
12	}
13	
14	function initDatabase() {
15	    $db = getDbConnection();
16	    
17	    $db->exec('
18	        CREATE TABLE IF NOT EXISTS products (
19	            id INTEGER PRIMARY KEY AUTOINCREMENT,
20	            title TEXT NOT NULL,
21	            description TEXT,
22	            image_name TEXT,
23	            price REAL NOT NULL
24	        )
25	    ');
26	    
27	    $result = $db->query('SELECT COUNT(*) as count FROM products');
28	    $row = $result->fetchArray(SQLITE3_ASSOC);
29	    
30	    if ($row['count'] == 0) {
31	        $products = [
32	            [
33	                'title' => 'Cola',
34	                'description' => 'Sweetened, carbonated beverage',
35	                'image_name' => 'images/cola.jpg',
36	                'price' => 1.99
37	            ],
38	            [
39	                'title' => 'Fanta',
40	                'description' => 'Orange flavored soft drink',
41	                'image_name' => 'images/fanta.jpg',
42	                'price' => 1.89
43	            ],
44	            [
45	                'title' => 'Sprite',
46	                'description' => 'Lemon-lime flavored soft drink',
47	                'image_name' => 'images/sprite.png',
48	                'price' => 1.79
49	            ],
50	            [
51	                'title' => 'Water',
52	                'description' => 'Mineral water',
53	                'image_name' => 'images/water.jpg',
54	                'price' => 0.99
55	            ],
56	            [
57	                'title' => 'Nuts',
58	                'description' => 'Mixed nuts package',
59	                'image_name' => 'images/nuts.jpg',
60	                'price' => 2.99
61	            ]
62	        ];
63	        
64	        $stmt = $db->prepare('
65	            INSERT INTO products (title, description, image_name, price) 
66	            VALUES (:title, :description, :image_name, :price)
67	        ');
68	        
69	        foreach ($products as $product) {
70	            $stmt->bindValue(':title', $product['title'], SQLITE3_TEXT);
71	            $stmt->bindValue(':description', $product['description'], SQLITE3_TEXT);
72	            $stmt->bindValue(':image_name', $product['image_name'], SQLITE3_TEXT);
73	            $stmt->bindValue(':price', $product['price'], SQLITE3_FLOAT);
74	            $stmt->execute();
75	            $stmt->reset();
76	        }
77	    }
78	    
79	    $db->exec('
80	        CREATE TABLE IF NOT EXISTS cart_items (
81	            id INTEGER PRIMARY KEY AUTOINCREMENT,
82	            session_id TEXT NOT NULL,
83	            product_id INTEGER NOT NULL,
84	            quantity INTEGER NOT NULL DEFAULT 1,
85	            FOREIGN KEY (product_id) REFERENCES products(id)
86	        )
87	    ');
88	    
89	    $db->close();
90	}
91	
92	initDatabase();
93	?>
cart.php
94	<?php
95	session_start();
96	
97	require_once 'functions.php';
98	
99	if (isset($_GET['action'])) {
100	    if ($_GET['action'] === 'remove' && isset($_GET['id'])) {
101	        $id = (int)$_GET['id'];
102	        removeCartItem($id);
103	        header('Location: cart.php');
104	        exit;
105	    } elseif ($_GET['action'] === 'clear') {
106	        clearCart();
107	        header('Location: cart.php');
108	        exit;
109	    }
110	}
111	
112	$cartItems = getCartItems();
113	
114	include 'tpl/header.phtml';
115	?>
116	<div>
117	    <div class="container">
118	        <div class="row">
119	            <div class="column">
120	                <?php if (empty($cartItems)): ?>
121	                    <div class="empty-cart">
122	                        <p>Your cart is empty</p>
123	                        <p><a href="index.php">Go to buy menu</a></p>
124	                    </div>
125	                <?php else: ?>
126	                    <table class="u-full-width">
127	                        <thead>
128	                            <tr>
129	                                <th>ID</th>
130	                                <th style="text-align: center;">Image</th>
131	                                <th>Name</th>
132	                                <th>Price</th>
133	                                <th>Amount</th>
134	                                <th>Total</th>
135	                                <th>Action</th>
136	                            </tr>
137	                        </thead>
138	                        <tbody>
139	                                <?php 
140	                                $totalSum = 0;
141	                                foreach ($cartItems as $item): 
142	                                    $itemSum = $item['price'] * $item['count'];
143	                                    $totalSum += $itemSum;
144	                                ?>
145	                                <tr>
146	                                    <td><?= $item['id'] ?></td>
147	                                    <td><div class="container-image">
148	                                        <img class="item-image" src="<?= htmlspecialchars($item['imageName']) ?>" alt="<?= htmlspecialchars($item['name']) ?>">
149	                                    </div></td>
150	                                    <td><?= $item['name'] ?></td>
151	                                    <td>$<?= number_format($item['price'], 2) ?></td>
152	                                    <td><?= $item['count'] ?></td>
153	                                    <td>$<?= number_format($itemSum, 2) ?></td>
154	                                    <td>
155	                                        <a href="cart.php?action=remove&id=<?= $item['id'] ?>" class="button button-remove">Delete</a>
156	                                    </td>
157	                                </tr>
158	                                <?php endforeach; ?>
159	                        </tbody>
160	                        <tfoot>
161	                            <tr>
162	                                <td colspan="4" style="text-align: right;"><strong>Total price:</strong></td>
163	                                <td colspan="3"><strong>$<?= number_format($totalSum, 2) ?></strong></td>
164	                            </tr>
165	                        </tfoot>
166	                    </table>
167	                    
168	                    <div class="cart-actions">
169	                        <a href="index.php" class="button">Continue buying</a>
170	                        <a href="cart.php?action=clear" class="button button-remove">Clear cart</a>
171	                        <a href="cart.php?action=clear" class="button button-approve">Buy items</a>
172	                    </div>
173	                <?php endif; ?>
174	            </div>
175	        </div>
176	    </div>
177	<?php include 'tpl/footer.phtml'; ?> 
about.php:
1	<?php
2	session_start();
3	
4	require_once 'functions.php';
5	
6	include 'tpl/header.phtml';
7	?>
8	
9	<div class="container">
10	    <div class="row">
11	        <div class="column">
12	            <h2>Про наш магазин</h2>
13	            
14	            <div class="about-content">
15	                <p>Ласкаво просимо до нашого інтернет-магазину! Ми раді запропонувати вам широкий асортимент якісних товарів за доступними цінами.</p>
16	                
17	                <h4>Наші переваги:</h4>
18	                <ul>
19	                    <li>Зручний інтерфейс для вибору та замовлення товарів</li>
20	                    <li>Швидка доставка</li>
21	                    <li>Висока якість обслуговування</li>
22	                    <li>Гарантія на всі товари</li>
23	                </ul>
24	                
25	                <h4>Як з нами зв'язатися:</h4>
26	                <p>Телефон: +38 (050) 123-45-67</p>
27	                <p>Email: illia.khudokormov@nure.ua</p>
28	                <p>Адреса: м. Харків, вул. Адигейська, 21</p>
29	                
30	                <h4>Години роботи:</h4>
31	                <p>Пн-Пт: 9:00 - 18:00</p>
32	                <p>Сб-Нд: 10:00 - 16:00</p>
33	            </div>
34	        </div>
35	    </div>
36	</div>
37	
38	<?php include 'tpl/footer.phtml'; ?>
header.phtml:
1	<!DOCTYPE html>
2	<html lang="uk">
3	<head>
4	    <meta charset="UTF-8">
5	    <meta name="viewport" content="width=device-width, initial-scale=1.0">
6	    <title>Web Інтернет Магазин</title>
7	    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css">
8	    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
9	    <style>
10	        html, body {
11	            height: 100%;
12	            margin: 0;
13	            padding: 0;
14	            display: flex;
15	            flex-direction: column;
16	        }
17	        .content {
18	            flex: 1 0 auto;
19	            margin-bottom: 0;
20	            padding-bottom: 0;
21	        }
22	        .header {
23	            padding: 10px 0;
24	            border-bottom: 1px solid #e1e1e1;
25	        }
26	        .header .navigation {
27	            display: flex;
28	            align-items: center;
29	            justify-content: space-between;
30	        }
31	        .header .navigation a {
32	            display: flex;
33	            align-items: center;
34	            text-decoration: none;
35	            margin: 0 10px;
36	            color: #333;
37	        }
38	        .header .navigation a {
39	            margin-left: 15px;
40	            text-decoration: none;
41	            display: inline-flex;
42	            align-items: center;
43	        }
44	        .header .navigation a i {
45	            margin-right: 5px;
46	        }
47	        .header .separator {
48	            color: #e1e1e1;
49	            margin-left: 15px;
50	        }
51	        .count-input {
52	            width: 60px;
53	        }
54	        .footer {
55	            height: 60px;
56	            border-top: 1px solid #e1e1e1;
57	            background-color: transparent;
58	            display: flex;
59	            align-items: center;
60	            justify-content: center;
61	            width: 100%;
62	            position: fixed;
63	            bottom: 0;
64	        }
65	        .footer .navigation {
66	            display: flex;
67	            justify-content: center;
68	            width: 100%;
69	        }
70	        .footer .navigation a {
71	            margin: 0 10px;
72	            text-decoration: none;
73	            color: #333;
74	        }
75	        .footer .separator {
76	            margin: 0 10px;
77	            color: #999;
78	        }
79	        .button-remove {
80	            background-color: #ff6b6b;
81	            color: white;
82	            border-color: #ff6b6b;
83	        }
84	        .button-approve
85	        {
86	            background-color:rgb(40, 145, 27);
87	            color: white;
88	            border-color:rgb(40, 145, 27);
89	        }
90	        .empty-cart {
91	            text-align: center;
92	            margin: 50px 0;
93	        }
94	        .cart-actions {
95	            margin-top: 20px;
96	        }
97	        .container-image {
98	            display: flex;
99	            justify-content: center;
100	            align-items: center;
101	        }       
102	        .item-image {
103	            display: block;
104	            margin-left: auto;
105	            margin-right: auto;
106	            max-width: 100px;
107	            max-height: 100px;
108	        }
109	        .logo a {
110	            text-decoration: none;
111	            color: #333;
112	        }
113	        .cart-actions .button {
114	            margin-right: 10px;
115	        }
116	        .error-message {
117	            margin-top:10px;
118	            background-color: #ffeeee;
119	            border-left: 5px solid #ff6b6b;
120	            padding: 10px;
121	            margin-bottom: 20px;
122	            color: #c62828;
123	        }
124	    </style>
125	</head>
126	<body>
127	    <div class="header">
128	        <div class="container">
129	            <div class="navigation">
130	                <a href="index.php"><i class="fas fa-home"></i> Home</a>
131	                <span class="separator">|</span>
132	                <a href="index.php"><i class="fas fa-shopping-bag"></i> Products</a>
133	                <span class="separator">|</span>
134	                <a href="cart.php"><i class="fas fa-shopping-cart"></i> Cart</a>
135	            </div>
136	        </div>
137	    </div>
138	</body>
139	</html>
 
footer.phtml:
1	<html>
2		<body>
3			<div class="footer">
4				<div class="container">
5					<div class="navigation">
6						<a href="index.php">Home</a>
7						<span class="separator">|</span>
8						<a href="index.php">Products</a>
9						<span class="separator">|</span>
10						<a href="cart.php">Cart</a>
11						<span class="separator">|</span>
12						<a href="about.php">About Us</a>
13					</div>
14				</div>
15			</div>
16		</body>
17	</html>